/*! https://github.com/leeoniya/uDSV (v0.1.0) */
var uDSV=function(e){"use strict";const t='"',l=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d{3,})?(?:Z|[-+]\d{2}:?\d{2})$/,n=["\t","|",";",","];function r(e,t,n=!1){let r=n?"{":"[";return e.forEach(((e,i)=>{r+=n?`"${e}":`:"";let s=`r[${i}]`,o=s,u=t.find((e=>null!=e[i]&&""!==e[i]));if(null!=u){let e=u[i];if(l.test(e))o=`new Date(${s})`;else if(Number.isNaN(Number.parseFloat(e))){if(/^(?:true|false|yes|no)$/i.test(e)){let[t,l]=e;o=`${s} === '${"t"==t||"f"==t?"true":"T"==t||"F"==t?"R"==l||"A"===l?"TRUE":"True":"y"==t||"n"==t?"yes":"Y"==t||"N"==t?"E"==l||"O"===l?"YES":"Yes":""}' ? true : false`}else if("["===e[0]||"{"===e[0])try{JSON.parse(e),o=`JSON.parse(${s})`}catch{}}else o=`${s} === 'NaN' ? NaN : Number.parseFloat(${s})`}r+=`${s} === '' || ${s} === 'null' || ${s} === 'NULL' ? null :  ${o},`})),r+=n?"}":"]",Function("rows",`\n\t\tlet arr = Array(rows.length);\n\n\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\tlet r = rows[i];   // trim()?\n\t\t\tarr[i] = ${r};\n\t\t}\n\n\t\treturn arr;\n\t`)}function i(e,l,n,r=5e3,i=null,s=null){let o=l.cols.delim,u=l.rows.delim,c=s||l.cols.names.length,f=null!=i,a=null!=s&&f,h=u.length,d=0;if(null==l.quote){let t=[],l=0,s=-1;for(;(s=e.indexOf(u,l))>-1&&(t.push(e.slice(l,s).split(o)),l=s+h,t.length!==r||(n(t,d++),t=[],!f||d!==i)););return void(t.length>0&&n(t,d++))}let $=u.charCodeAt(0),m=o.charCodeAt(0);const g=a?RegExp(`[^${o}${u}]+`,"my"):null,p=Array(c).fill("");let N,A=0,O=0,w=e.length-1,x=[],y="",C=p.slice(),b=0,k=c-1;for(;w>=O;){if(N=e.charCodeAt(O),0===A)if(34===N)A=2,O+=1,N=e.charCodeAt(O);else if(N===m||N===$){if(C[b]=y,b+=1,O+=1,y="",N===$){if(x.push(C),x.length===r&&(n(x,d++),x=[],f&&d===i))return;C=p.slice(),b=0,O+=h-1}N=e.charCodeAt(O)}else A=1;if(2===A)for(;;)if(34===N){if(34!==e.charCodeAt(O+1)){A=0,O+=1;break}y+=t,O+=2,N=e.charCodeAt(O)}else{let l=e.indexOf(t,O);y+=e.slice(O,l),O=l,N=34}else if(1===A)if(N===m||N===$){if(C[b]=y,b+=1,O+=1,y="",N===$){if(x.push(C),x.length===r&&(n(x,d++),x=[],f&&d===i))return;C=p.slice(),b=0,O+=h-1}A=0}else if(a){g.lastIndex=O;let t=g.exec(e)[0];y+=t,O+=t.length}else{let t;b===k?(t=e.indexOf(u,O),-1===t&&(t=e.length)):t=e.indexOf(o,O),y+=e.slice(O,t),O=t}}C[b]=y,x.push(C),n(x,d++)}return e.parse=i,e.schema=function(e,l){l??=10;const s=e.match(/(.*)(\r?\n?)/),o=s[1],u=s[2],c=n.find((e=>o.indexOf(e)>-1));let f=e.indexOf(t)>-1,a=null,h=null,d=null;const $={quote:f?t:null,cols:{delim:c,names:[]},rows:{delim:u},toArrs:e=>(a??=r(p,g,!1),a(e)),toObjs:e=>(h??=r(p,g,!0),h(e)),toCols:e=>(d??=function(e){return Function("chunk",`\n\t\tlet cols = [${e.map((()=>"Array(chunk.length)")).join(",")}];\n\n\t\tfor (let i = 0; i < chunk.length; i++) {\n\t\t\tlet row = chunk[i];\n\t\t\t${e.map(((e,t)=>`cols[${t}][i] = row[${t}]`)).join(";")};\n\t\t}\n\n\t\treturn cols;\n\t`)}(p),d(e))},m=o.split(c).length,g=[];i(e,$,(e=>g.push(...e)),l,1,m);const p=Object.values(g.shift());return $.cols.names=p,$},e}({});
