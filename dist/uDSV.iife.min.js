/*! https://github.com/leeoniya/uDSV (v0.1.0) */
var uDSV=function(t){"use strict";const e='"',l=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d{3,})?(?:Z|[-+]\d{2}:?\d{2})$/,n=["\t","|",";",","];function r(t,e,n=!1){let r=n?"{":"[";return t.forEach(((t,i)=>{r+=n?`"${t}":`:"";let s=`r[${i}]`,o=s,u=e.find((t=>null!=t[i]&&""!==t[i]));if(null!=u){let t=u[i];if(l.test(t))o=`new Date(${s})`;else if(Number.isNaN(Number.parseFloat(t))){if(/^(?:true|false|yes|no)$/i.test(t)){let[e,l]=t;o=`${s} === '${"t"==e||"f"==e?"true":"T"==e||"F"==e?"R"==l||"A"===l?"TRUE":"True":"y"==e||"n"==e?"yes":"Y"==e||"N"==e?"E"==l||"O"===l?"YES":"Yes":""}' ? true : false`}else if("["===t[0]||"{"===t[0])try{JSON.parse(t),o=`JSON.parse(${s})`}catch{}}else o=`${s} === 'NaN' ? NaN : Number.parseFloat(${s})`}r+=`${s} === '' || ${s} === 'null' || ${s} === 'NULL' ? null :  ${o},`})),r+=n?"}":"]",Function("rows",`\n\t\tlet arr = Array(rows.length);\n\n\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\tlet r = rows[i];   // trim()?\n\t\t\tarr[i] = ${r};\n\t\t}\n\n\t\treturn arr;\n\t`)}function i(t,l,n,r=5e3,i=null,s=null){let o=l.cols.delim,u=l.rows.delim,f=s||l.cols.names.length,c=null!=i,a=null!=s&&c,h=u.length,d=0;if(null==l.quote){let e=[],l=0,s=-1;for(;(s=t.indexOf(u,l))>-1&&(e.push(t.slice(l,s).split(o)),l=s+h,e.length!==r||(n(e,d++),e=[],!c||d!==i)););return void(e.length>0&&n(e,d++))}let $=u.charCodeAt(0),m=o.charCodeAt(0);const g=a?RegExp(`[^${o}${u}]+`,"my"):null,p=Array(f).fill("");let N,A=0,O=0,w=t.length-1,x=[],y="",C=p.slice(),b=0,k=f-1;for(;w>=O;){if(N=t.charCodeAt(O),0===A)if(34===N)A=2,O+=1,N=t.charCodeAt(O);else if(N===m||N===$){if(C[b]=y,b+=1,O+=1,y="",N===$){if(x.push(C),x.length===r&&(n(x,d++),x=[],c&&d===i))return;C=p.slice(),b=0,O+=h-1}N=t.charCodeAt(O)}else A=1;if(2===A)for(;;)if(34===N){if(34!==t.charCodeAt(O+1)){A=0,O+=1;break}y+=e,O+=2,N=t.charCodeAt(O)}else{let l=t.indexOf(e,O);y+=t.slice(O,l),O=l,N=34}else if(1===A)if(N===m||N===$){if(C[b]=y,b+=1,O+=1,y="",N===$){if(x.push(C),x.length===r&&(n(x,d++),x=[],c&&d===i))return;C=p.slice(),b=0,O+=h-1}A=0}else if(a){g.lastIndex=O;let e=g.exec(t)[0];y+=e,O+=e.length}else{let e;b===k?(e=t.indexOf(u,O),-1===e&&(e=t.length)):e=t.indexOf(o,O),y+=t.slice(O,e),O=e}}C[b]=y,x.push(C),n(x,d++)}return t.parse=i,t.schema=function(t,l){l??=10;const s=t.match(/(.*)(\r?\n?)/),o=s[1],u=s[2],f=n.find((t=>o.indexOf(t)>-1));let c=t.indexOf(e)>-1,a=null,h=null,d=null;const $={quote:c?e:null,cols:{delim:f,names:[]},rows:{delim:u},toArrs:t=>(a??=r(p,g,!1),a(t)),toObjs:t=>(h??=r(p,g,!0),h(t)),toCols:t=>(d??=function(t){return Function("chunk",`\n\t\tlet cols = [${t.map((()=>"Array(chunk.length)")).join(",")}];\n\n\t\tfor (let i = 0; i < chunk.length; i++) {\n\t\t\tlet row = chunk[i];\n\t\t\t${t.map(((t,e)=>`cols[${e}][i] = row[${e}]`)).join(";")};\n\t\t}\n\n\t\treturn cols;\n\t`)}(p),d(t))},m=o.split(f).length,g=[];i(t,$,(t=>g.push(...t)),l,1,m);const p=g.shift().filter((t=>""!==t));return $.cols.names=p,$},t}({});
