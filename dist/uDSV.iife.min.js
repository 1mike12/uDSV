/*! https://github.com/leeoniya/uDSV (v0.1.0) */
var uDSV=function(t){"use strict";const e='"',n=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d{3,})?(?:Z|[-+]\d{2}:?\d{2})$/,l=["\t","|",";",","];function r(t,e,l=!1){let r=l?"{":"[";return t.forEach(((t,i)=>{r+=l?`"${t}":`:"";let s=`r[${i}]`,o=s,u=e.find((t=>null!=t[i]&&""!==t[i]));if(null!=u){let t=u[i];if(n.test(t))o=`new Date(${s})`;else if(Number.isNaN(Number.parseFloat(t))){if(/^(?:true|false)$/i.test(t))o=s+".toLowerCase() === 'true' ? true : false";else if("["===t[0]||"{"===t[0])try{JSON.parse(t),o=`JSON.parse(${s})`}catch{}}else o=`${s} === 'NaN' ? NaN : Number.parseFloat(${s})`}r+=`${s} === '' || ${s} == null ? void 0 : ${s}.length === 4 && ${s}.toLowerCase() === 'null' ? null :  ${o},`})),r+=l?"}":"]",Function("rows",`\n\t\tlet arr = Array(rows.length);\n\n\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\tlet r = rows[i];   // trim()?\n\t\t\tarr[i] = ${r};\n\t\t}\n\n\t\treturn arr;\n\t`)}function i(t,n,l,r=5e3,i=null,s=null){let o=n.cols.delim,u=n.rows.delim,a=s||n.cols.names.length,c=null!=i,f=null!=s&&c,h=u.length,d=0;if(null==n.quote){let e=[],n=0,s=-1;for(;(s=t.indexOf(u,n))>-1&&(e.push(t.slice(n,s).split(o)),n=s+h,e.length!==r||(l(e,d++),e=[],!c||d!==i)););return void(e.length>0&&l(e,d++))}let $=u.charCodeAt(0),g=o.charCodeAt(0);const m=f?RegExp(`[^${o}${u}]+`,"my"):null;let p,A=0,w=0,N=t.length-1,C=[],O="",x=Array(a),y=0,b=a-1;for(;N>=w;){if(p=t.charCodeAt(w),0===A)if(34===p)A=2,w+=1,p=t.charCodeAt(w);else if(p===g||p===$){if(x[y]=O,y+=1,w+=1,O="",p===$){if(C.push(x),C.length===r&&(l(C,d++),C=[],c&&d===i))return;x=Array(a),y=0,w+=h-1}p=t.charCodeAt(w)}else A=1;if(2===A)for(;;)if(34===p){if(34!==t.charCodeAt(w+1)){A=0,w+=1;break}O+=e,w+=2,p=t.charCodeAt(w)}else{let n=t.indexOf(e,w);O+=t.slice(w,n),w=n,p=34}else if(1===A)if(p===g||p===$){if(x[y]=O,y+=1,w+=1,O="",p===$){if(C.push(x),C.length===r&&(l(C,d++),C=[],c&&d===i))return;x=Array(a),y=0,w+=h-1}A=0}else if(f){m.lastIndex=w;let e=m.exec(t)[0];O+=e,w+=e.length}else{let e;y===b?(e=t.indexOf(u,w),-1===e&&(e=t.length)):e=t.indexOf(o,w),O+=t.slice(w,e),w=e}}x[y]=O,C.push(x),l(C,d++)}return t.parse=i,t.schema=function(t,n){n??=10;const s=t.match(/(.*)(\r?\n?)/),o=s[1],u=s[2],a=l.find((t=>o.indexOf(t)>-1));let c=t.indexOf(e)>-1,f=null,h=null,d=null;const $={quote:c?e:null,cols:{delim:a,names:[]},rows:{delim:u},toArrs:t=>(f??=r(p,m,!1),f(t)),toObjs:t=>(h??=r(p,m,!0),h(t)),toCols:t=>(d??=function(t){return Function("chunk",`\n\t\tlet cols = [${t.map((()=>"Array(chunk.length)")).join(",")}];\n\n\t\tfor (let i = 0; i < chunk.length; i++) {\n\t\t\tlet row = chunk[i];\n\t\t\t${t.map(((t,e)=>`cols[${e}][i] = row[${e}]`)).join(";")};\n\t\t}\n\n\t\treturn cols;\n\t`)}(p),d(t))},g=o.split(a).length,m=[];i(t,$,(t=>m.push(...t)),n,1,g);const p=Object.values(m.shift());return $.cols.names=p,$},t}({});
