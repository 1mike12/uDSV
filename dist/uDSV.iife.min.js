/*! https://github.com/leeoniya/uDSV (v0.1.0) */
var uDSV=function(e){"use strict";const t=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d{3,})?(?:Z|[-+]\d{2}:?\d{2})$/,n=["\t","|",";",","];function l(e,n,l=!1){let r=l?"{":"[";return e.forEach(((e,i)=>{r+=l?`"${e}":`:"";let s=`r[${i}]`,o=s,u=n.find((e=>null!=e[i]&&""!==e[i]));if(null!=u){let e=u[i];if(t.test(e))o=`new Date(${s})`;else if(Number.isNaN(Number.parseFloat(e))){if(/^(?:true|false|yes|no)$/i.test(e)){let[t,n]=e;o=`${s} === '${"t"==t||"f"==t?"true":"T"==t||"F"==t?"R"==n||"A"===n?"TRUE":"True":"y"==t||"n"==t?"yes":"Y"==t||"N"==t?"E"==n||"O"===n?"YES":"Yes":""}' ? true : false`}else if("["===e[0]||"{"===e[0])try{JSON.parse(e),o=`JSON.parse(${s})`}catch{}}else o=`${s} === 'NaN' ? NaN : Number.parseFloat(${s})`}r+=`${s} === '' || ${s} === 'null' || ${s} === 'NULL' ? null :  ${o},`})),r+=l?"}":"]",Function("rows",`\n\t\tlet arr = Array(rows.length);\n\n\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\tlet r = rows[i];   // trim()?\n\t\t\tarr[i] = ${r};\n\t\t}\n\n\t\treturn arr;\n\t`)}function r(e,t,n,l=!0,r=5e3,i=null,s=null){let o=t.cols.delim,u=t.rows.delim,a=t.quote??"",c=s||t.cols.names.length,f=null!=i,h=null!=s&&f,d=u.length,$=0,g=""==a?0:a.charCodeAt(0),m=u.charCodeAt(0),p=o.charCodeAt(0);const A=h?RegExp(`[^${o}${u}]+`,"my"):null,N=Array(c).fill("");let b,k=0,w=0,C=e.length-1,y=0,O=[],x="",E=N.slice(),F=0,S=c-1,T=-1;for(;C>=w;){if(b=e.charCodeAt(w),0===k)if(b===g){if(k=2,w+=1,w>C)break;b=e.charCodeAt(w)}else if(b===p||b===m){if(E[F]=x,T=F,F+=1,w+=1,x="",b===m){if(h&&S>T&&0===O.length&&(E.length=N.length=T+1,S=T),O.push(E),O.length===r&&(n(O,$++,""),O=[],f&&$===i))return;E=N.slice(),F=0,T=-1,w+=d-1,y=w}if(w>C)break;b=e.charCodeAt(w)}else k=1;if(2===k)for(;;)if(b===g){if(w+1>C){w=C+1;break}if(e.charCodeAt(w+1)!==g){k=0,w+=1;break}if(x+=a,w+=2,w>C){w=C+1;break}b=e.charCodeAt(w)}else{let t=e.indexOf(a,w);if(-1===t){w=C+1;break}x+=e.slice(w,t),w=t,b=g}else if(1===k)if(b===p||b===m){if(E[F]=x,T=F,F+=1,w+=1,x="",b===m){if(h&&S>T&&0===O.length&&(E.length=N.length=T+1,S=T),O.push(E),O.length===r&&(n(O,$++,""),O=[],f&&$===i))return;E=N.slice(),F=0,T=-1,w+=d-1,y=w}k=0}else if(h){A.lastIndex=w;let t=A.exec(e)[0];x+=t,w+=t.length}else{let t=e.indexOf(F===S?u:o,w);-1===t&&(t=C+1),x+=e.slice(w,t),w=t}}l&&F===S&&(E[F]=x,O.push(E),k=0),n(O,$++,l||0===k&&!(-1===T?""!==x:S>T)?"":e.slice(y))}return e.parse=r,e.schema=function(e,t){t??=10;const i=e.match(/(.*)(\r?\n?)/),s=i[1],o=i[2],u=n.find((e=>s.indexOf(e)>-1));let a=e.indexOf('"')>-1,c=null,f=null,h=null;const d={quote:a?'"':null,cols:{delim:u,names:[]},rows:{delim:o},toArrs:e=>(c??=l(m,g,!1),c(e)),toObjs:e=>(f??=l(m,g,!0),f(e)),toCols:e=>(h??=function(e){return Function("chunk",`\n\t\tlet cols = [${e.map((()=>"Array(chunk.length)")).join(",")}];\n\n\t\tfor (let i = 0; i < chunk.length; i++) {\n\t\t\tlet row = chunk[i];\n\t\t\t${e.map(((e,t)=>`cols[${t}][i] = row[${t}]`)).join(";")};\n\t\t}\n\n\t\treturn cols;\n\t`)}(m),h(e))},$=s.split(u).length,g=[];r(e,d,(e=>g.push(...e)),!1,t,1,$);const m=g.shift();return d.cols.names=m,d},e}({});
